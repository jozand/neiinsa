extends ../layout/index

block contenido
        h1.text-4xl.my-10.font-extrabold.text-center= pagina

        if errores 
            div(class="max-w-md mx-auto my-10")
                each error in errores
                    p.bg-red-600.text-white.uppercase.text-xs.text-center.p-2.mb-1.font-bold= error.msg

        div(class="bg-white shadow py-8 px-4 rounded mx-auto max-w-4xl my-10 md:px-10")
            div(class="flex space-x-4 border-b mb-5")
                button#agregarProductosTab(class="tab-button py-2 px-4 font-bold text-gray-700 border-b-2 border-transparent hover:border-green-500") Ingreso de Productos
                button#productosAgregadosTab(class="tab-button py-2 px-4 font-bold text-gray-700 border-b-2 border-transparent hover:border-green-500") Productos ingresados

            div#agregarProductos
                form.space-y-5(method="POST" action='/ventas/crearDetalle')
                    input(type="hidden" name="_csrf" value= csftToken)
                    input(type="hidden" name="ventaId" id="ventaId" value= datos.ventaId ? datos.ventaId : '') 
                    input(type="hidden" name="precioCostoVenta" id="precioCostoVenta" value= datos.precioCostoVenta ? datos.precioCostoVenta : '') 
                
                    div(class="md:flex md:gap-4 space-y-5 md:space-y-0")  
                        div(class="md:w-1/3") 
                            label.block.text-sm.uppercase.text-gray-500.mb-3.font-bold(for="fecha") Fecha
                            input#fecha.w-full.px-3.py-2.border.border-gray-300.rounded-md.placeholder-gray-400(placeholder="Fecha de ingreso", type="date", name="fecha" value= datos.fechaDeVenta ? datos.fechaDeVenta: '' disabled)

                        div(class="md:w-1/3") 
                            label.block.text-sm.uppercase.text-gray-500.mb-3.font-bold(for="precioTotal") Precio Total
                            input#precioTotal.w-full.px-3.py-2.border.border-gray-300.rounded-md.placeholder-gray-400(placeholder="Precio total de la venta", type="text", name="precioTotal" value= datos.precioTotal ? datos.precioTotal: '' disabled)

                        div(class="md:w-1/3") 
                            label.block.text-sm.uppercase.text-gray-500.mb-3.font-bold(for="cantidadTotal") Cantidad Total
                            input#cantidadTotal.w-full.px-3.py-2.border.border-gray-300.rounded-md.placeholder-gray-400(placeholder="Cantidad Total de la venta", type="text", name="cantidadTotal" value= datos.cantidadTotal ? datos.cantidadTotal: '' disabled)

                    div
                        label(class="block text-sm uppercase text-gray-500 mb-3 font-bold mt-4" for="nombreProveedor") Datos del cliente
                        textarea#nombreProveedor.w-full.px-3.py-2.border.border-gray-300.rounded-md.placeholder-gray-400(placeholder="Nombre del Proveedor" name="nombreProveedor" disabled)=datos.cliente ? datos.cliente : ''

                    div(class="md:flex md:gap-4 space-y-5 md:space-y-0")

                        div(class="md:w-1/2") 
                            label.block.text-sm.uppercase.text-gray-500.mb-3.font-bold(for="marcaId") Marca
                            select#marcaId.w-full.px-3.py-2.border.border-gray-300.rounded-md.placeholder-gray-400(name="marcaId")
                                option(value='') - Seleccione -
                                each marca in marcas 
                                    option(value=marca.marcaId selected= datos.marcaId ? datos.marcaId == marca.marcaId ? true : false : null)= marca.nombre

                        div(class="md:w-1/2") 
                            label.block.text-sm.uppercase.text-gray-500.mb-3.font-bold(for="productoId") Productos
                            select#productoId.w-full.px-3.py-2.border.border-gray-300.rounded-md.placeholder-gray-400(name="productoId")
                                option(value='') - Seleccione -
                                each producto in productos 
                                    option(value=producto.productoId selected= datos.productoId ? datos.productoId == producto.productoId ? true : false : null)= producto.color

                    div(class="md:flex md:gap-4 space-y-5 md:space-y-0")  

                        div(class="md:w-1/3") 
                            label#precioCostoLabel.block.text-sm.uppercase.text-gray-500.mb-3.font-bold(for="precioCosto") Precio Costo
                            input#precioCosto.w-full.px-3.py-2.border.border-gray-300.rounded-md.placeholder-gray-400(placeholder="Ingrese precio costo", type="text", name="precioCosto" value= datos.precioCosto ? datos.precioCosto: '', disabled)

                        div(class="md:w-1/3") 
                            label#precioVentaLabel.block.text-sm.uppercase.text-gray-500.mb-3.font-bold(for="precioUnitario") Precio de Venta
                            input#precioUnitario.w-full.px-3.py-2.border.border-gray-300.rounded-md.placeholder-gray-400(placeholder="Ingrese precio unitario", type="text", name="precioUnitario" value= datos.precioUnitario ? datos.precioUnitario: '')         

                        div(class="md:w-1/3") 
                            label#cantidadLabel.block.text-sm.uppercase.text-gray-500.mb-3.font-bold(for="cantidad")
                                | Cantidad: 
                                span#cantidadMaxima.text-xs.text-gray-400.lowercase #{datos.cantidadMaxima}
                            input#cantidad.w-full.px-3.py-2.border.border-gray-300.rounded-md.placeholder-gray-400(placeholder="Ingrese cantidad", type="number", name="cantidad" value= datos.cantidad ? datos.cantidad: '')

                    div(class="flex space-x-4 mb-4")
                            // Botón de Regresar
                            a(href="/ventas/lista/0/0", class="w-1/2 inline-flex items-center justify-center px-4 py-2 border border-gray-300 bg-gray-200 rounded-md text-gray-700 hover:bg-gray-300")
                                i.fas.fa-arrow-left.mr-2
                                | Regresar

                            // Botón de Guardar                         
                            button(type="submit" class="w-1/2 inline-flex items-center justify-center px-4 py-2 bg-green-600 hover:bg-green-700 text-white font-bold rounded-md")
                                i.fas.fa-save.mr-2
                                | Guardar

            div#productos.hidden
                if datos.ventas_detalles.length
                    form.space-y-5(method="POST" action='/ventas/finalizaVenta')
                        input(type="hidden" name="_csrf" value= csftToken)
                        input(type="hidden" name="ventaId" id="ventaId" value= datos.ventaId ? datos.ventaId : '') 

                        div(class="overflow-x-auto")
                            table(class="min-w-full bg-white border-collapse mt-4")
                                thead
                                    tr(class="bg-green-500 text-white uppercase text-sm leading-normal")
                                        th(class="py-3 px-6 text-left border-b border-gray-200") Marca
                                        th(class="py-3 px-6 text-left border-b border-gray-200") Producto
                                        th(class="py-3 px-6 text-left border-b border-gray-200") Cantidad
                                        th(class="py-3 px-6 text-left border-b border-gray-200") Precio Costo
                                        th(class="py-3 px-6 text-left border-b border-gray-200") Precio Venta
                                        th(class="py-3 px-6 text-left border-b border-gray-200") Acción
                                tbody(id="pedidosTable" class="text-gray-900 text-sm")
                                    each ventaDetalle in datos.ventas_detalles
                                        tr(class="border-b border-green-200 hover:bg-green-100")
                                            td(class="py-3 px-6 text-left border-b border-gray-200")= ventaDetalle.Producto.marca.nombre
                                            td(class="py-3 px-6 text-left border-b border-gray-200")= ventaDetalle.Producto.nombre
                                            td(class="py-3 px-6 text-left border-b border-gray-200")= ventaDetalle.cantidad
                                            td(class="py-3 px-6 text-left border-b border-gray-200")= new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'GTQ' }).format(ventaDetalle.precioCosto)
                                            td(class="py-3 px-6 text-left border-b border-gray-200")= new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'GTQ' }).format(ventaDetalle.precioVenta)                        
                                            td(class="py-3 px-6 text-center border-b border-gray-200")
                                                a(href=`/ventas/mensajeEliminarVentaDetalle/${ventaDetalle.ventasDetalleId}` class="text-red-500 hover:text-red-700 flex items-center")
                                                    i(class="fas fa-trash-alt mr-1")
                                                    | Eliminar

                        div(class="flex space-x-4 mb-4 mt-5")
                            // Botón de Regresar
                            button(type="button", onclick="showAgregarProductosTab()", class="w-1/2 inline-flex items-center justify-center px-4 py-2 border border-gray-300 bg-gray-200 rounded-md text-gray-700 hover:bg-gray-300")
                                i.fas.fa-arrow-left.mr-2
                                | Regresar

                            // Botón de Guardar                         
                            button(type="submit" class="w-1/2 inline-flex items-center justify-center px-4 py-2 bg-green-600 hover:bg-green-700 text-white font-bold rounded-md")
                                i.fas.fa-save.mr-2
                                | Finalizar

                else
                    p.text-center No hay productos registrados.


block scripts
    script.
        document.addEventListener('DOMContentLoaded', () => {
            const agregarProductosTab = document.getElementById('agregarProductosTab');
            const productosAgregadosTab = document.getElementById('productosAgregadosTab');
            const agregarContent = document.getElementById('agregarProductos');
            const productosContent = document.getElementById('productos');
            

            const switchTab = (tabToActivate, contentToShow) => {
                // Restablecer todas las pestañas
                document.querySelectorAll('.tab-button').forEach(tab => {
                    tab.classList.remove('border-green-500', 'text-green-500');
                    tab.classList.add('border-transparent', 'text-gray-700');
                });

                // Ocultar todo el contenido
                agregarContent.classList.add('hidden');
                productosContent.classList.add('hidden');

                // Activar la pestaña y mostrar el contenido correspondiente
                tabToActivate.classList.remove('border-transparent', 'text-gray-700');
                tabToActivate.classList.add('border-green-500', 'text-green-500');
                contentToShow.classList.remove('hidden');
            };

            agregarProductosTab.addEventListener('click', () => switchTab(agregarProductosTab, agregarContent));
            productosAgregadosTab.addEventListener('click', () => switchTab(productosAgregadosTab, productosContent));

            // Inicialmente activar la primera pestaña
            switchTab(agregarProductosTab, agregarContent);
        });
    script.
        function showAgregarProductosTab() {
            document.getElementById('agregarProductosTab').click();
        }
    script.
        document.addEventListener('DOMContentLoaded', () => {

            const pedidoId = document.getElementById('pedidoId');
            const productoSelect = document.getElementById('productoId');
            const inputPrecioUnitario = document.getElementById('precioUnitario');
            const inputPrecioCosto = document.getElementById('precioCosto');
            const inputCantidad = document.getElementById('cantidad');
            const cantidadMaximaElement = document.getElementById('cantidadMaxima');
            const inputPrecioCostoVenta = document.getElementById('precioCostoVenta');
            const ventaId = document.getElementById('ventaId');

            // Seleccionar las etiquetas
            const labelPrecioCosto = document.getElementById('precioCostoLabel');
            const labelPrecioVenta = document.getElementById('precioVentaLabel');
            const cantidadLabel = document.getElementById('cantidadLabel');
            

            productoSelect.addEventListener('change', async (event) => {
                const productoId = event.target.value;
                
                if (productoId) {

                    try {
                                    
                        const response = await fetch(`/ventas/productosDatos/${productoId}/${ventaId.value}`);
                        const detalles = await response.json();   

                        const formatoQuetzal = new Intl.NumberFormat('es-GT', {
                            style: 'currency',
                            currency: 'GTQ'
                        });
                                                
                        if (detalles && detalles.precioUnitario !== null && detalles.precioCosto !== null && detalles.cantidad !== null) {
                            inputPrecioUnitario.value = detalles.precioUnitario === 0 ? "" : formatoQuetzal.format(detalles.precioUnitario);
                            inputPrecioCosto.value = detalles.precioCosto === 0 ? "" : formatoQuetzal.format(detalles.precioCosto);
                            inputPrecioCostoVenta.value = detalles.precioCosto;
                            inputCantidad.value = detalles.existenciaValor === 0 ? "" : detalles.existenciaValor;     
                            cantidadMaximaElement.textContent = '(existencia = ' + detalles.cantidad + ')'; 
                            inputCantidad.max = detalles.cantidad;

                            inputCantidad.addEventListener('input', () => {
                                if (parseInt(inputCantidad.value) > detalles.cantidad) {
                                    inputCantidad.value = detalles.cantidad;
                                }
                            });

                            if (detalles.aplicaColor) {
                                labelPrecioCosto.style.color = 'red';
                                labelPrecioVenta.style.color = 'red';
                                cantidadLabel.style.color = 'red';
                            } else {
                                // Restaurar color si aplicaColor es false
                                labelPrecioCosto.style.color = '';
                                labelPrecioVenta.style.color = '';
                                cantidadLabel.style.color = '';
                            }

                        } else {
                            // Limpiar los campos si `detalles` es `null` o los valores son nulos
                            inputPrecioUnitario.value = "";
                            inputPrecioCosto.value = "";
                            inputCantidad.value = "";
                        }                
                    
                    } catch (error) {
                        console.error(error);
                    }
                }
            });
        });

    script.
         document.getElementById('marcaId').addEventListener('change', function () {
            cargaProductos(); 
        });

        async function cargaProductos() {
            const marcaSelect = document.getElementById('marcaId');
            const productosSelect = document.getElementById('productoId');

            productosSelect.innerHTML = '<option value="">- Seleccione -</option>';
            
            if (marcaId) {
                try {
                    
                    const response = await fetch(`/ventas/productosMarcas/${marcaSelect.value}`);
                    const productos = await response.json();

                    productos.forEach(producto => {
                        const option = document.createElement('option');
                        option.value = producto.productoId;
                        option.textContent = producto.nombre;
                        productosSelect.appendChild(option);
                    });

                
                } catch (error) {
                    console.error('Error al cargar los municipios:', error);
                }
            }
        }

    script.
        document.addEventListener('DOMContentLoaded', function() {          

             const inputs = [document.getElementById('precioCosto'), document.getElementById('precioUnitario')];

             inputs.forEach(input => {
                input.addEventListener('input', function(e) {
                    // Elimina todos los caracteres que no sean números o puntos
                    let value = e.target.value.replace(/[^\d]/g, '');

                    // Agregar el formato de moneda
                    value = new Intl.NumberFormat('es-GT', {
                    style: 'currency',
                    currency: 'GTQ'
                    }).format(value / 100);

                    // Actualizar el valor del campo de entrada
                    e.target.value = value;
                }); 

             });
        });